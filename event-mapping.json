{
  "events": {
    "alexa": [
      {
        "id": "alexa-end-session",
        "filename": "AlexaEndSession",
        "title": "Alexa End Session",
        "tags": {}
      },
      {
        "id": "alexa-intent-answer",
        "filename": "AlexaIntentAnswer",
        "title": "Alexa Intent - Answer",
        "tags": {}
      },
      {
        "id": "alexa-intent-getnewfact",
        "filename": "AlexaIntentGetnewfact",
        "title": "Alexa Intent - GetNewFact",
        "tags": {}
      },
      {
        "id": "alexa-intent-mycoloris",
        "filename": "AlexaIntentMycoloris",
        "title": "Alexa Intent - MyColorIs",
        "tags": {}
      },
      {
        "id": "alexa-intent-recipe",
        "filename": "AlexaIntentRecipe",
        "title": "Alexa Intent - Recipe",
        "tags": {}
      },
      {
        "id": "alexa-smart-home-control-turn-off-request",
        "filename": "AlexaSmartHomeControlTurnOffRequest",
        "title": "Alexa Smart Home - Turn Off",
        "tags": {}
      },
      {
        "id": "alexa-smart-home-control-turn-on-request",
        "filename": "AlexaSmartHomeControlTurnOnRequest",
        "title": "Alexa Smart Home - Turn On",
        "tags": {}
      },
      {
        "id": "alexa-smart-home-discovery-request",
        "filename": "AlexaSmartHomeDiscoveryRequest",
        "title": "Alexa Smart Home - Discovery",
        "tags": {}
      },
      {
        "id": "alexa-start-session",
        "filename": "AlexaStartSession",
        "title": "Alexa Start Session",
        "tags": {}
      }
    ],
    "apigateway": [
      {
        "id": "api-gateway-authorizer",
        "filename": "ApiGatewayAuthorizer",
        "title": "API Gateway Authorizer",
        "tags": {
          "accountId": {
            "$ref": "#/definitions/accountId"
          },
          "region": {
            "$ref": "#/definitions/region"
          }
        }
      },
      {
        "id": "aws-proxy",
        "filename": "AwsProxy",
        "title": "API Gateway AWS Proxy",
        "tags": {
          "body": {
            "type": "string",
            "description": "HTTP body of the proxied request.",
            "default": "{\"test\":\"body\"}"
          },
          "method": {
            "type": "string",
            "description": "HTTP method of the proxied request.",
            "default": "POST"
          },
          "resource": {
            "type": "string",
            "description": "The API Gateway resource name.",
            "default": "/{proxy+}"
          },
          "path": {
            "type": "string",
            "description": "URL path of the proxied request.",
            "default": "path/to/resource"
          }
        }
      }
    ],
    "batch": [
      {
        "id": "batch-get-job",
        "filename": "BatchGetJob",
        "title": "AWS Batch Get Job Request",
        "tags": {}
      },
      {
        "id": "batch-submit-job",
        "filename": "BatchSubmitJob",
        "title": "AWS Batch Submit Job Request",
        "tags": {}
      }
    ],
    "cloudformation": [
      {
        "id": "cfn-create-request",
        "filename": "CfnCreateRequest",
        "title": "CloudFormation Create Request",
        "tags": {
          "accountId": {
            "$ref": "#/definitions/accountId"
          },
          "region": {
            "$ref": "#/definitions/region"
          },
          "stackName": {
            "type": "string",
            "description": "Name of the CloudFormation stack sending the event.",
            "default": "MyStack"
          }
        }
      }
    ],
    "cloudfront": [
      {
        "id": "cloudfront-ab-test",
        "filename": "CloudfrontAbTest",
        "title": "CloudFront AB Test",
        "tags": {}
      },
      {
        "id": "cloudfront-access-request-in-response",
        "filename": "CloudfrontAccessRequestInResponse",
        "title": "CloudFront Access Request Header in Response Event",
        "tags": {}
      },
      {
        "id": "cloudfront-http-redirect",
        "filename": "CloudfrontHttpRedirect",
        "title": "CloudFront HTTP Redirect",
        "tags": {}
      },
      {
        "id": "cloudfront-modify-querystring",
        "filename": "CloudfrontModifyQuerystring",
        "title": "CloudFront Modify Query String",
        "tags": {}
      },
      {
        "id": "cloudfront-modify-response-header",
        "filename": "CloudfrontModifyResponseHeader",
        "title": "CloudFront Modify Response Header",
        "tags": {}
      },
      {
        "id": "cloudfront-multiple-remote-calls-aggregate-response",
        "filename": "CloudfrontMultipleRemoteCallsAggregateResponse",
        "title": "CloudFront Multiple Remote Calls Aggregate Response",
        "tags": {}
      },
      {
        "id": "cloudfront-normalize-querystring-to-improve-cache-hit",
        "filename": "CloudfrontNormalizeQuerystringToImproveCacheHit",
        "title": "CloudFront Normalize Querystring For Improved Cache Hit",
        "tags": {}
      },
      {
        "id": "cloudfront-redirect-on-viewer-country",
        "filename": "CloudfrontRedirectOnViewerCountry",
        "title": "CloudFront Generate Redirect Response on Viewer Country",
        "tags": {}
      },
      {
        "id": "cloudfront-redirect-unauthenticated-users",
        "filename": "CloudfrontRedirectUnauthenticatedUsers",
        "title": "CloudFront Redirect Unauthenticated Users",
        "tags": {}
      },
      {
        "id": "cloudfront-response-generation",
        "filename": "CloudfrontResponseGeneration",
        "title": "CloudFront Response Generation",
        "tags": {}
      },
      {
        "id": "cloudfront-serve-object-on-viewer-device",
        "filename": "CloudfrontServeObjectOnViewerDevice",
        "title": "CloudFront Serve Different Object on Viewer Device",
        "tags": {}
      },
      {
        "id": "cloudfront-simple-remote-call",
        "filename": "CloudfrontSimpleRemoteCall",
        "title": "CloudFront Simple Remote Call",
        "tags": {}
      }
    ],
    "codecommit": [
      {
        "id": "codecommit",
        "filename": "Codecommit",
        "title": "CodeCommit",
        "tags": {
          "accountId": {
            "$ref": "#/definitions/accountId"
          },
          "region": {
            "$ref": "#/definitions/region"
          },
          "repositoryName": {
            "type": "string",
            "description": "Name of the CodeCommit repository sending the event.",
            "default": "my-repo"
          },
          "triggerName": {
            "type": "string",
            "description": "Name of the CodeCommit repository trigger.",
            "default": "my-trigger"
          },
          "customData": {
            "type": "string",
            "description": "Custom data sent along with the event.",
            "default": "this is custom data"
          }
        }
      }
    ],
    "cognito": [
      {
        "id": "cognito-sync-trigger",
        "filename": "CognitoSyncTrigger",
        "title": "Cognito Sync Trigger",
        "tags": {
          "region": {
            "$ref": "#/definitions/region"
          }
        }
      }
    ],
    "config": [
      {
        "id": "configuration-item-change-notification",
        "filename": "ConfigurationItemChangeNotification",
        "title": "AWS Config Change Triggered Rule",
        "tags": {}
      },
      {
        "id": "oversized-configuration-item-change-notification",
        "filename": "OversizedConfigurationItemChangeNotification",
        "title": "AWS Config Change Triggered Rule - Oversized",
        "tags": {}
      },
      {
        "id": "periodic-rule",
        "filename": "PeriodicRule",
        "title": "AWS Config Periodic Rule",
        "tags": {}
      }
    ],
    "dynamodb": [
      {
        "id": "dynamodb-update-json",
        "filename": "DynamodbUpdateJson",
        "title": "DynamoDB Update",
        "tags": {
          "accountId": {
            "$ref": "#/definitions/accountId"
          },
          "region": {
            "$ref": "#/definitions/region"
          },
          "tableName": {
            "type": "string",
            "description": "Name of the DynamoDB table sending the event.",
            "default": "ExampleTableWithStream"
          }
        }
      }
    ],
    "events": [
      {
        "id": "scheduled-event",
        "filename": "ScheduledEvent",
        "title": "Scheduled Event",
        "tags": {
          "accountId": {
            "$ref": "#/definitions/accountId"
          },
          "region": {
            "$ref": "#/definitions/region"
          },
          "ruleName": {
            "type": "string",
            "description": "Name of the CloudWatch Events rule sending the event.",
            "default": "ExampleRule"
          }
        }
      }
    ],
    "firehose": [
      {
        "id": "kinesis-firehose",
        "filename": "KinesisFirehose",
        "title": "Kinesis Firehose",
        "tags": {}
      },
      {
        "id": "kinesis-firehose-apachelog",
        "filename": "KinesisFirehoseApachelog",
        "title": "Kinesis Firehose Apache Log",
        "tags": {}
      },
      {
        "id": "kinesis-firehose-cloudwatch-logs-processor",
        "filename": "KinesisFirehoseCloudwatchLogsProcessor",
        "title": "Kinesis Firehose Cloudwatch Logs Processor",
        "tags": {}
      },
      {
        "id": "kinesis-firehose-streams-as-source",
        "filename": "KinesisFirehoseStreamsAsSource",
        "title": "Kinesis Firehose streams as source",
        "tags": {}
      },
      {
        "id": "kinesis-firehose-syslog",
        "filename": "KinesisFirehoseSyslog",
        "title": "Kinesis Firehose Syslog",
        "tags": {}
      }
    ],
    "kinesis": [
      {
        "id": "kinesis",
        "filename": "Kinesis",
        "title": "Kinesis",
        "tags": {
          "region": {
            "$ref": "#/definitions/region"
          },
          "sequenceNumber": {
            "type": "string",
            "description": "The Kinesis sequence number.",
            "default": "49545115243490985018280067714973144582180062593244200961"
          }
        }
      }
    ],
    "lex": [
      {
        "id": "lex-book-car",
        "filename": "LexBookCar",
        "title": "Lex BookTrip - Book Car",
        "tags": {}
      },
      {
        "id": "lex-book-hotel",
        "filename": "LexBookHotel",
        "title": "Lex BookTrip - Book Hotel",
        "tags": {}
      },
      {
        "id": "lex-make-appointment",
        "filename": "LexMakeAppointment",
        "title": "Lex - Make Appointment",
        "tags": {}
      },
      {
        "id": "lex-order-flowers",
        "filename": "LexOrderFlowers",
        "title": "Lex - Order Flowers",
        "tags": {}
      }
    ],
    "logs": [
      {
        "id": "cloudwatch-logs",
        "filename": "CloudwatchLogs",
        "title": "CloudWatch Logs",
        "tags": {}
      }
    ],
    "rekognition": [
      {
        "id": "rekognition-s3-request",
        "filename": "RekognitionS3Request",
        "title": "Rekognition S3 Request",
        "tags": {
          "region": {
            "$ref": "#/definitions/region"
          },
          "bucketName": {
            "type": "string",
            "description": "Name of the S3 bucket sending the event.",
            "default": "example-bucket"
          },
          "objectKey": {
            "type": "string",
            "description": "Key of the S3 object that was created.",
            "default": "test/key"
          }
        }
      }
    ],
    "s3": [
      {
        "id": "s3-delete",
        "filename": "S3Delete",
        "title": "S3 Delete",
        "tags": {
          "region": {
            "$ref": "#/definitions/region"
          },
          "bucketName": {
            "type": "string",
            "description": "Name of the S3 bucket sending the event.",
            "default": "example-bucket"
          },
          "objectKey": {
            "type": "string",
            "description": "Key of the S3 object that got deleted.",
            "default": "test/key"
          }
        }
      },
      {
        "id": "s3-put",
        "filename": "S3Put",
        "title": "S3 Put",
        "tags": {
          "region": {
            "$ref": "#/definitions/region"
          },
          "bucketName": {
            "type": "string",
            "description": "Name of the S3 bucket sending the event.",
            "default": "example-bucket"
          },
          "objectKey": {
            "type": "string",
            "description": "Key of the S3 object that was created.",
            "default": "test/key"
          }
        }
      }
    ],
    "ses": [
      {
        "id": "ses-email-receiving",
        "filename": "SesEmailReceiving",
        "title": "SES Email Receiving",
        "tags": {}
      }
    ],
    "sns": [
      {
        "id": "sns",
        "filename": "Sns",
        "title": "SNS",
        "tags": {
          "accountId": {
            "$ref": "#/definitions/accountId"
          },
          "region": {
            "$ref": "#/definitions/region"
          },
          "topicName": {
            "type": "string",
            "description": "Name of the SNS topic sending the notification.",
            "default": "ExampleTopic"
          },
          "subject": {
            "type": "string",
            "description": "Subject of the notification.",
            "default": "example subject"
          },
          "message": {
            "type": "string",
            "description": "The notification message body.",
            "default": "example message"
          }
        }
      }
    ],
    "stepfunctions": [
      {
        "id": "step-functions-error",
        "filename": "StepFunctionsError",
        "title": "Step Functions Error",
        "tags": {}
      }
    ]
  }
}
